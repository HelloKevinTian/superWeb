/**
 * 全局数据表模块
 *
 * @author <a href="zhangdong@chukong-inc.com">zhangdong</a>
 * @version 0.0.1
 * @date 2015.04.20
 */
var fs = require('fs');
var http = require('http');
var request = require('request');
var logger = require('ss-logger').getLogger(__filename);

var loginServer = null;
var jsonTable = {};

var dbChangeCallBack = {};

/**
 * 配置mongodb模块.
 *
 * @param  {String|Object} config 配置文件路径或者配置文件对象
 * @return {void}
 */
function configure(config) {
	if (typeof config === 'string') {
		loginServer = JSON.parse(fs.readFileSync(config, "utf8"));
	}
}

/**
 * 加载json文件
 *
 * @param  {string} file 指定文件路径
 * @param  {string} name 指定json存储名
 */
function loadJsonByFile(file, name) {
	if (!file || typeof(file) != 'string') {
		logger.error('参数file不正确');
		return;
	}

	if (!name || typeof(name) != 'string') {
		logger.error('参数name不正确');
		return;
	}

	logger.info('Load ' + file);

	var jsonData = fs.readFileSync(file, 'utf-8');
	if (!jsonData) {
		logger.error('读取文件%s失败', file);
		return;
	}

	var obj = JSON.parse(jsonData);
	jsonTable[name] = obj;

	fs.watchFile(file, function(curr, prev) {
		logger.info('Reload ' + file);
		fs.readFile(file, 'utf-8', function(err, data) {
			if (err) {
				logger.error('读取文件%s失败', file);
				return;
			}

			try {
				var obj = JSON.parse(data);
				jsonTable[name] = obj;

			} catch (e) {
				logger.error(e.name + ' : ' + e.message + ' in ' + file);
				return;
			}
		});
	});
}

/**
 * 加载数据库对象
 *
 * @param  {string} table 指定mongodb中的集体合
 * @param  {string} name 指定json存储名
 */
function loadJsonByDB(table, name, ev) {
	if (!table || typeof(table) != 'string') {
		logger.error('参数table不正确');
		return;
	}

	if (!name || typeof(name) != 'string') {
		logger.error('参数name不正确');
		return;
	}
	var mongo = require('ss-mongo');
	mongo.loadTable(name, table, function(error, data) {
		if (error)
			return;

		jsonTable[name] = data;
	});

	dbChangeCallBack[ev] = function(cb) {
		mongo.loadTable(name, table, function(error, data) {
			if (error)
				return;

			jsonTable[name] = data;
			cb(data.version);
		});
	}
}

/**
 *开始检测数据库对象改变
 */
function startCheckDBChange() {
	if (!loginServer) {
		logger.error('LoginServer is null');
		return;
	}

	var url = loginServer.loginurl + '/heartbeat';
	request({
		'url': url,
		'method': 'POST',
		'form': {
			'index': loginServer.index
		},
		'json': true,
		timeout: 12000
	}, function(err, res, body) {
		setTimeout(startCheckDBChange, 5000);

		if (err) {
			logger.error('Get ' + url + ' error code is ' + err);
			return;
		}

		if (body.querySuccess != 1) {
			logger.error('Get ' + url + ' message is ' + body.message);
			return;
		}

		var cb = dbChangeCallBack[body.event];
		if (cb) {
			cb(function(version) {
				var url = loginServer.loginurl + '/event';
				request({
					'url': url,
					'method': 'POST',
					'json': {
						'sever': loginServer.index,
						'index': loginServer.index,
						'version': version,
						'event': body.event
					}
				});
			})
		}
	});
}

/**
 * 获取指定json对象
 *
 * @param  {string} name 指定存储名
 * @return {object}
 */
function getTableJson(name) {
	if (!name && typeof(name) != 'string')
		return null;

	return jsonTable[name];
}

/*
 * 导出函数列表
 */
module.exports = {
	// 配置mongodb
	'configure': configure,
	// 加载json文件
	'loadJsonByFile': loadJsonByFile,
	// 加载数据库对象
	'loadJsonByDB': loadJsonByDB,
	// 开始检测数据库改变
	'startCheckDBChange': startCheckDBChange,
	// 获取指定json对象
	'getTableJson': getTableJson
}